#!/bin/bash
SERVER="rzc-game"
BASE_DIR=$PWD
INTERVAL=8
LOG_FILE_PATH="/data/logs/$SERVER.log"


function start()
{
	if [ "`pgrep $SERVER -u $UID`" != "" ];then
		echo "$SERVER already running"
		exit 0
	fi

	$BASE_DIR/$SERVER >> $LOG_FILE_PATH
	# nohup $BASE_DIR/$SERVER $ARGS  server &>/dev/null &

	echo "starting..." &&  sleep $INTERVAL

	# check status
	if [ "`pgrep $SERVER -u $UID`" == "" ];then
		echo "$SERVER start failed"
		exit 1
	fi
}

function status() 
{
	if [ "`pgrep $SERVER -u $UID`" != "" ];then
		echo $SERVER is running
	else
		echo $SERVER is not running
	fi
}

function stop() 
{
	if [ "`pgrep $SERVER -u $UID`" != "" ];then
		kill -9 `pgrep $SERVER -u $UID`
	fi

	echo "sleeping..." &&  sleep $INTERVAL

	if [ "`pgrep $SERVER -u $UID`" != "" ];then
		echo "$SERVER stop failed"
		exit 1
	fi
}

function restart() 
{
    echo "restarting..."

	if [ "`pgrep $SERVER -u $UID`" != "" ];then
		kill -USR1 `pgrep $SERVER -u $UID`
	fi


	echo "restart success"
}

function build() 
{
	echo "build..."

    CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o ./$SERVER main.go
    if [ $? -ne "0" ];then  
        echo "built error!!!"
        return 
    fi  

    echo "built success!"
}


case "$1" in
	'start')
	start
	;;  
	'stop')
	stop
	;;  
	'status')
	status
	;;  
	'restart')
	restart
	;; 
    'build')
	build
	;;  
	*)  
	echo "usage: $0 {start|stop|restart|status|build}"
	exit 1
	;;  
esac
